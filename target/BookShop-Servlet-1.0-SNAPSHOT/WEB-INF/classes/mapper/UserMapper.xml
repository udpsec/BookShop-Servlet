<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inofd.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.inofd.domain.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="activeCode" jdbcType="VARCHAR" property="activecode" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="registTime" jdbcType="TIMESTAMP" property="registtime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, `PASSWORD`, gender, email, telephone, introduce, activeCode, `state`, 
    `role`, registTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.inofd.domain.User" useGeneratedKeys="true">
    insert into user (username, `PASSWORD`, gender, 
      email, telephone, introduce, 
      activeCode, `state`, `role`, 
      registTime)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, 
      #{activecode,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{role,jdbcType=VARCHAR}, 
      #{registtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.inofd.domain.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `PASSWORD`,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="activecode != null">
        activeCode,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="role != null">
        `role`,
      </if>
      <if test="registtime != null">
        registTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="activecode != null">
        #{activecode,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="registtime != null">
        #{registtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.inofd.domain.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `PASSWORD` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="activecode != null">
        activeCode = #{activecode,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        `role` = #{role,jdbcType=VARCHAR},
      </if>
      <if test="registtime != null">
        registTime = #{registtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inofd.domain.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      `PASSWORD` = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      activeCode = #{activecode,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=INTEGER},
      `role` = #{role,jdbcType=VARCHAR},
      registTime = #{registtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>